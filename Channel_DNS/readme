===========================================================================
        Algorithm: Advection-based Multiframe Iterative Correction (AMIC)
           Author: CHEN Junwei, Stefano DISCETTI, Marco RAIOLA
       Laboratory: EAP of UC3M
         Platform: MATLAB & PYTHON
             Date: 20th January 2025
          Version: 2.0.0
          Contact: junwei.chen@uc3m.es
===========================================================================

DESCRIPTION
The Advection-based Multiframe Iterative Correction (AMIC) is a space-time filter based on advection funtion to filter the (Particle Image Velocimetry) PIV fields. Here is an example on 3D synthetic dataset of channel flow at $Re_\tau = 1000$ from JHTDB (John Hopkins Turbulence Database).

PLATFORM
The codes are tested on:
AMD Ryzen 9 5950X/128 GB DDR4/NVIDIA GeForce RTX 4090
Debian 12/MATLAB R2023b
It takes 150 s over 8 loops for AMIC, and 600 s for pressure computation over 100 frames

DATABASE


the original database is 
https://turbulence.idies.jhu.edu/home

RUNNING
change the file path to suit your environment and run

FILES IN GITHUB
airfoilLES_README.pdf                           copy of the readme of original database
gaussian_white_noise/                           folder of the code with Gaussian white noise
convolution_gaussian_white_noise/               folder of the code with convolution of Gaussian white noise
in each folder there is:
    AMICFilter.m                                MATLAB script to process the velocity field using AMIC
    Noisify.m                                   MATLAB script to superpose noise into velocity field
    PODFilter.m                                 MATLAB script to perform POD (Proper Orthogonal Decomposition) truncation on velocity field
    P_calculation.m                             MATLAB script to compute the pressure field
    SGFilter.m                                  MATLAB script to filter the velocity field with Savitzky-Golay filter
    filter_ae.py                                PYTHON code to perform blind denoise autoencoder
    log              	                        a file logging the outputs of program
    showpressure.m                              MATLAB script to check the pressure computation result
    showvelocity.m                              MATLAB script to check the velocity processing result

FILES IN ZENODO
GWN/                                            folder of the data with Gaussian white noise
CGWN/                                           folder of the data with convolution of Gaussian white noise
in each folder there is:
    Pressure.h5                                 saving pressure computation result
    V_NOISE.mat                                 saving velocity field superimposed with noise
    V_SG.mat                                    saving velocity field after Savitzky-Golay filter
    V_POD.mat                                   saving velocity field after POD truncation
    V_AE.mat                                    saving velocity field after blind denoise autoencoder
    V_AMIC.mat                                  saving velocity field after AMIC

ACKNOWLEDGEMENT
We warmly acknowledge John Hopkins Turbulent Database, and wish the user of data on Zenodo cite their articles.
